{"version":3,"sources":["webpack:///./src/components/HighScores.js","webpack:///./src/components/GameQuestions.js","webpack:///./src/components/UserResult.js","webpack:///./src/pages/game.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["HighScores","props","react_default","a","createElement","Fragment","highScoreArray","length","className","map","highScore","index","key","score","correctAnswers","name","gatsby_browser_entry","to","GameQuestions","handleClickAnswer","e","value","timer","unescape","questions","questionCounter","currentAnswers","answer","onClick","String","fromCharCode","UserResult","handleClick","handleClickNavigate","style","maxWidth","userResults","QuizGame","state","answerIndex","result","highScores","newScore","_this","newCorrectAnswers","target","parentElement","newQuestionCounter","setState","shuffleCorrectAnswer","userResult","newUserResults","concat","Object","assign","localStorage","setItem","JSON","stringify","clearInterval","intervalRef","nextQuestion","startTimer","setInterval","newTime","Math","round","random","splice","innerText","navigate","sort","b","componentWillMount","_this2","this","axios","get","then","response","hasOwnProperty","getItem","_this2$setState","parse","_this2$setState2","data","results","location","catch","error","console","log","render","id","components_UserResult","components_HighScores","components_GameQuestions","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-game-js-6411233efb5d0179bf8f.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst HighScores = props => {\r\n  return (\r\n    <>\r\n      <h1>high scores</h1>\r\n      {props.highScoreArray.length > 0 ? (\r\n        <div className=\"top3\">\r\n          {props.highScoreArray.map((highScore, index) => (\r\n            <div className=\"high-score\" key={`high-score-${index}`}>\r\n              <div className=\"high-score-item\">\r\n                <span>Score: </span>\r\n                <span>{highScore.score}</span>\r\n              </div>\r\n              <div className=\"high-score-item\">\r\n                <span>Correct: </span>\r\n                <span>{highScore.correctAnswers}</span>\r\n              </div>\r\n              <div className=\"high-score-item\">\r\n                <span>{highScore.name}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h2>Not enough scores yet</h2>\r\n      )}\r\n      <Link className=\"btn\" to=\"/\">\r\n        New Game\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HighScores","import React from \"react\"\r\n\r\nconst GameQuestions = props => {\r\n  const handleClickAnswer = e => props.handleClickAnswer(e)\r\n  return (\r\n    <>\r\n      <div className=\"timer\" value={props.timer}>\r\n        {props.timer}\r\n      </div>\r\n      <h2>{unescape(props.questions[props.questionCounter][\"question\"])}</h2>\r\n      {props.currentAnswers &&\r\n        props.currentAnswers.map((answer, index) => (\r\n          <li\r\n            value={index}\r\n            className=\"choice-container\"\r\n            key={`li-answer-${index}`}\r\n            onClick={e => handleClickAnswer(e)}\r\n          >\r\n            <p\r\n              className=\"choice-prefix\"\r\n              value={index}\r\n              onClick={e => handleClickAnswer(e)}\r\n            >\r\n              {String.fromCharCode(65 + index)}\r\n            </p>\r\n            <p\r\n              value={index}\r\n              className=\"choice-text\"\r\n              onClick={e => handleClickAnswer(e)}\r\n            >\r\n              {unescape(answer)}\r\n            </p>\r\n          </li>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GameQuestions\r\n","import React from \"react\"\r\n\r\nconst UserResult = props => {\r\n  const handleClick = e => props.handleClickNavigate(e)\r\n  return (\r\n    <div>\r\n      <h2 style={{ maxWidth: \"100%\" }}>Your Result</h2>\r\n      <div className=\"score\">\r\n        <span>Score: </span>\r\n        {props.userResults[props.userResults.length - 1][\"score\"]}\r\n      </div>\r\n      <div className=\"score\">\r\n        <span>Correct Answers: </span>\r\n        {props.userResults[props.userResults.length - 1][\"correctAnswers\"]}\r\n      </div>\r\n      <div className=\"btn \" value=\"NewGame\" onClick={e => handleClick(e)}>\r\n        New Game\r\n      </div>\r\n      <div className=\"btn \" value=\"HighScore\" onClick={e => handleClick(e)}>\r\n        High Scores\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserResult","import React, { Component } from \"react\"\r\nimport \"./game.css\"\r\nimport axios from \"axios\"\r\nimport HighScores from \"../components/HighScores\"\r\nimport GameQuestions from \"../components/GameQuestions\"\r\nimport UserResult from \"../components/UserResult\"\r\n\r\nclass QuizGame extends Component {\r\n  state = {\r\n    name: \"\",\r\n    questions: [],\r\n    score: 0,\r\n    correctAnswers: 0,\r\n    timer: 30,\r\n    userResults: [],\r\n    questionCounter: 0,\r\n    answerIndex: 0,\r\n    result: false,\r\n    highScores: false,\r\n    highScoreArray: [],\r\n  }\r\n  componentWillMount() {\r\n    axios\r\n      .get(\"https://opentdb.com/api.php?amount=10&encode=url3986\")\r\n      .then(response => {\r\n        for (let key in this.state) {\r\n          if (localStorage.hasOwnProperty(key)) {\r\n            let value = localStorage.getItem(key)\r\n            try {\r\n              value = JSON.parse(value)\r\n              this.setState({ [key]: value })\r\n            } catch (e) {\r\n              this.setState({ [key]: value })\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          questions: response.data.results,\r\n          name: this.props.location.state.name,\r\n        })\r\n        this.shuffleCorrectAnswer()\r\n        this.startTimer()\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickAnswer = e => {\r\n    let newScore = this.state.score\r\n    let newCorrectAnswers = this.state.correctAnswers\r\n    if (\r\n      e.target.value === this.state.answerIndex ||\r\n      e.target.parentElement.parentElement.value === this.state.answerIndex ||\r\n      e.target.parentElement.value === this.state.answerIndex\r\n    ) {\r\n      newScore += 50 + this.state.timer\r\n      newCorrectAnswers += 1\r\n    }\r\n    if (this.state.questionCounter < 9) {\r\n      let newQuestionCounter = this.state.questionCounter + 1\r\n      this.setState(\r\n        {\r\n          score: newScore,\r\n          correctAnswers: newCorrectAnswers,\r\n          questionCounter: newQuestionCounter,\r\n          timer: 30,\r\n        },\r\n        () => this.shuffleCorrectAnswer()\r\n      )\r\n    } else {\r\n      const userResult = {\r\n        name: this.state.name,\r\n        score: newScore,\r\n        correctAnswers: this.state.correctAnswers,\r\n      }\r\n      let newUserResults = [...this.state.userResults, { ...userResult }]\r\n      this.setState({\r\n        score: newScore,\r\n        result: true,\r\n        userResults: newUserResults,\r\n      })\r\n      localStorage.setItem(\"userResults\", JSON.stringify(newUserResults))\r\n      clearInterval(this.intervalRef)\r\n    }\r\n  }\r\n  nextQuestion = () => {\r\n    if (this.state.questionCounter < 9) {\r\n      let newQuestionCounter = this.state.questionCounter + 1\r\n      this.setState(\r\n        {\r\n          questionCounter: newQuestionCounter,\r\n          timer: 30,\r\n        },\r\n        () => this.shuffleCorrectAnswer()\r\n      )\r\n    } else {\r\n      const userResult = {\r\n        name: \"\",\r\n        score: this.state.score,\r\n        correctAnswers: this.state.correctAnswers,\r\n      }\r\n      let newUserResults = [...this.state.userResults, { ...userResult }]\r\n      this.setState({\r\n        result: true,\r\n        userResults: newUserResults,\r\n      })\r\n      localStorage.setItem(\"userResults\", JSON.stringify(newUserResults))\r\n      clearInterval(this.intervalRef)\r\n    }\r\n  }\r\n  startTimer = () => {\r\n    this.intervalRef = setInterval(() => {\r\n      let newTime = this.state.timer - 1\r\n      if (newTime < 1) {\r\n        newTime = 30\r\n        this.nextQuestion()\r\n      }\r\n      this.setState({ timer: newTime })\r\n    }, 1000)\r\n  }\r\n  shuffleCorrectAnswer = () => {\r\n    let currentAnswers = [\r\n      ...this.state.questions[this.state.questionCounter][\"incorrect_answers\"],\r\n    ]\r\n    let answerIndex = Math.round(Math.random() * currentAnswers.length)\r\n    currentAnswers.splice(\r\n      answerIndex,\r\n      0,\r\n      this.state.questions[this.state.questionCounter][\"correct_answer\"]\r\n    )\r\n    this.setState({ currentAnswers, answerIndex })\r\n  }\r\n  handleClickNavigate = e => {\r\n    if (e.target.innerText === \"New Game\") {\r\n      this.props.navigate(\"/\")\r\n    } else if (e.target.innerText === \"High Scores\") {\r\n      let newResult = false\r\n      let newHighScores = true\r\n      let highScoreArray = this.state.userResults.sort((a, b) =>\r\n          b.score - a.score\r\n      )\r\n      highScoreArray.splice(10, highScoreArray.length)\r\n      this.setState({\r\n        result: newResult,\r\n        highScores: newHighScores,\r\n        highScoreArray: highScoreArray,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          {this.state.questions[this.state.questionCounter] && (\r\n            <div id=\"game\" className=\"flex-center flex-column\">\r\n              {this.state.result && this.state.result === true ? (\r\n                <UserResult\r\n                  userResults={this.state.userResults}\r\n                  handleClickNavigate={this.handleClickNavigate}\r\n                />\r\n              ) : (\r\n                <>\r\n                  {this.state.highScores && this.state.highScores === true ? (\r\n                    <HighScores highScoreArray={this.state.highScoreArray} />\r\n                  ) : (\r\n                    <GameQuestions\r\n                      timer={this.state.timer}\r\n                      questions={this.state.questions}\r\n                      questionCounter={this.state.questionCounter}\r\n                      currentAnswers={this.state.currentAnswers}\r\n                      handleClickAnswer={this.handleClickAnswer}\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QuizGame","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}